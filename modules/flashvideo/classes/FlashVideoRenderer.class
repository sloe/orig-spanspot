<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

GalleryCoreApi::requireOnce('modules/core/classes/GalleryRenderer.class');

/**
 * A renderer for Flash Video.
 * @package FlashVideo
 * @subpackage Classes
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision: 15953 $
 */
class FlashVideoRenderer extends GalleryRenderer {

    /**
     * @see GalleryRenderer::canBeViewedInline
     */
    function canBeViewedInline($item) {
  return GalleryUtilities::isA($item, 'GalleryMovieItem')
      && ($item->getMimeType() == 'video/x-flv' || $item->getMimeType() == 'video/mp4');
    }

    /**
     * @see GalleryRenderer::render
     */
    function render($format, $entity, $item, $params) {
  global $gallery;
        
  $session =& $gallery->getSession();

  $playerSet = GalleryUtilities::getRequestVariables('playerSet');

  if (isset($playerSet) && $playerSet != '') {
    $session->put('spanspot.player', $playerSet);
  }
  $player = $session->get('spanspot.player');
        
  $fallback = trim(preg_replace("/[\r\n]/", '', $params['fallback']));

  if ($format != 'HTML' || ($entity->getMimeType() != 'video/x-flv' && $entity->getMimeType() != 'video/mp4')) {
      return null;
  }

  list ($ret, $params) = GalleryCoreApi::fetchAllPluginParameters('module', 'flashvideo');
  if ($ret) {
      return null;
  }
  $scripts = '
<style>
  .tooltip {
	display:none;
	background:transparent url(/tools/img/tooltip/black_arrow.png);
  font-family:arial,helvetica,verdana,sans-serif;
	font-size:12px;
	height:70px;
	width:160px;
	padding:25px;
	color:#fff;	
}
</style>
<script src="http://cdn.jquerytools.org/1.2.5/jquery.tools.min.js"></script>
<script>
$(document).ready(function() {
  $("#playerchoice a[title]").tooltip();
  $("#playerchoice div[title]").tooltip();
});
</script>';

  $urlGenerator =& $gallery->getUrlGenerator();
  $currentUrl = $urlGenerator->getCurrentUrl();

	$shareUrl = $urlGenerator->generateUrl(
        array('view' => 'core.ShowItem', 'itemId' => $entity->getId(), 'share' => '1'),
        array('forceFullUrl' => true, 'forceDirect' => true));
  $shareUrl = str_replace('staging.', 'www.', $shareUrl);
  
  $playerFoooter='';
  $replacer = '';
  
  $playerTypes = array(
    'moyea' => array('Moyea', 'This is the original player and supports .'),
    'flowplayer' => array('FlowPlayer', 'This is a pseudo-streaming player.  You can click the timeline and the video will reload from there.'),
    'flvplayer' => array('FLVPlayer', 'Notable for the cool blur effect at the end.'),
    'jwplayer' => array('JW Player', 'The biggie - can do everything, but most features are switched off here.'),    
    'flowplayerstream' => array('FlowPlayer Stream (experimental)', 'Experimental speed-controlled play, using real-time streaming.'),
  );
  $playerChooser = '
<div id="playerchoice">
<style type="text/css">
  table.chooser-table table { border-width: 0px; border-spacing: 0px; padding: 0; }
  table.chooser-table tr { height: 20px; vertical-align: middle; }
  table.chooser-table td { padding: 0 16px 0 0; }
</style>
<table class="chooser-table"><tr><td>Choose player:</td>
  ';

  foreach ($playerTypes as $key => $info) {
    $playerChooser .= '<td>';
    if ($player == $key) {
      $playerChooser .= sprintf('<div title="%s"><b>%s</b></div>', $info[1], $info[0]);   
    } else {
      $selfUrl = $urlGenerator->generateUrl(
        array('view' => 'core.ShowItem', 'itemId' => $entity->getId(), 'playerSet' => $key),
        array('forceFullUrl' => true, 'forceDirect' => true));
      $playerChooser .= sprintf('<a href="%s" title="%s">%s</a>',
        $selfUrl, $info[1], $info[0]);
    }
    $playerChooser .= '</td>';
  }
  $playerChooser .= '</tr></table></div>';

  $src = $urlGenerator->generateUrl(
    array('view' => 'core.DownloadItem', 'itemId' => $entity->getId(),
          'serialNumber' => $entity->getSerialNumber()),
    array('forceFullUrl' => true, 'forceSessionId' => true, 'htmlEntities' => false));
  list ($width, $height, $title) =
    array($entity->getWidth(), $entity->getHeight(), $item->getTitle());
  if(	$entity->getWidth() == 0 && $entity->getHeight() == 0){
    $width = 480;
    $height = 160;
  }
  GalleryCoreApi::requireOnce('lib/smarty_plugins/modifier.markup.php');
  $title = smarty_modifier_markup($title, 'strip');



  /* Default player: G2flv.swf */
  /* Including SWFObject<http://blog.deconcept.com/swfobject/> to defeat the "Click to activate..." in IE */
  $SWFObjectUrl = $urlGenerator->generateUrl(
    array('href' => 'modules/flashvideo/lib/swfobject.js'),
    array('forceFullUrl' => true));
  $expressInstallUrl = $urlGenerator->generateUrl(
    array('href' => 'modules/flashvideo/lib/expressinstall.swf'),
    array('forceFullUrl' => true));
  $playerUrl = $urlGenerator->generateUrl(
    array('href' => 'modules/flashvideo/lib/E2.swf'),
    array('forceFullUrl' => true));

    if ($entity->parentId == 40043) {
        $flashVars = 'xmlUrl='.$urlGenerator->generateUrl(array('href'=>'mediaRss.php'), array('forceFullUrl'=>true))
        .'&g2_itemId='.$entity->parentId.'&Width='.$width.'&Height='.$height.'&title='.urlencode($title).'&startId='.$entity->getId();
    } else {
        $flashVars = 'flvUrl='.urlencode($src).'&Width='.$width.'&Height='.$height.'&title='.urlencode($title);
    }

  $extraAttr = '';
  if($params['allowDownload']){
      $flashVars .= '&allowDownload=true';
  }
  if($params['share']){
      $flashVars .= '&share=true';
    /* To allow for sharing we must also pass the playerUrl */
      $flashVars .= '&swfUrl=' . urlencode($playerUrl);
  }
  if(!$params['allowFullscreen']){
      $flashVars .= '&allowFullscreen=false';
  }
  if($params['autoStart']){
      $flashVars .= '&autoStart=true';
  }

  $itemId = $item->getId();
  list ($ret, $thumbnail) = GalleryCoreApi::fetchThumbnailsByItemIds(array($itemId));
  if (!$ret && !empty($thumbnail)) {
      $thumbUrl = $urlGenerator->generateUrl(
    array('view' => 'core.DownloadItem', 'itemId' => $thumbnail[$itemId]->getId(),
          'serialNumber' => $thumbnail[$itemId]->getSerialNumber()),
    array('forceFullUrl' => true, 'forceSessionId' => true, 'htmlEntities' => false));
      $flashVars .= '&thumbUrl=' . urlencode($thumbUrl);
  }
  if(isset($params['color1'])){
      $flashVars .= '&color1=0x' . $params['color1'];
  }
  if(isset($params['color2'])){
      $flashVars .= '&color2=0x' . $params['color2'];
  }
  if(isset($params['color4'])){
      $flashVars .= '&color4=0x' . $params['color4'];
  }
  $flashVars .= '&htmlDiv=flashvideo';
  list ($ret, $module) = GalleryCoreApi::loadPlugin('module', 'flashvideo');
  if ($ret) {
      return null;
  }
  foreach (array('langDownload' => $module->translate('Download'),
           'langFullscreen' => $module->translate('Fullscreen'),
         'langNormal' => $module->translate('Normal'),
               'langPlay' => $module->translate('Play'),
               'langPause' => $module->translate('Pause'),
               'langForward' => $module->translate('Forward'),
               'langRewind' => $module->translate('Rewind'),
               'langMute' => $module->translate('Mute'),
               'langUnmute' => $module->translate('Unmute'),
               'langShare' => $module->translate('Share'),
        ) as $key => $value) {
      $flashVars .= '&' . $key . '=' . urlencode($value);
  }
  
  if ($player == "flowplayer") {
    /*
     * ***** FLOWPLAYER
     */    
    $playerUrl = $urlGenerator->generateUrl(
        array('href' => 'modules/flashvideo/lib/flowplayergpl/flowplayer-3.2.7.swf'),
        array('forceFullUrl' => true));
    $flashVars = sprintf("config={'plugins':{'pseudo':{'url':'%s'},'controls':{'url':'%s'}},'clip':{'provider':'pseudo','url':'%s'}}",
        'flowplayer.pseudostreaming-3.2.7.swf', 'flowplayer.controls-3.2.5.swf', urlencode($src));
  } elseif ($player == "flowplayerstream") {
    /*
     * ***** FLOWPLAYER STREAM
     */    
  
    /* Map the source appropritely for the stream server */
    $src = $urlGenerator->generateUrl(
      array('view' => 'core.DownloadItem', 'itemId' => $entity->getId(),
        'serialNumber' => $entity->getSerialNumber()),
      array('forceFullUrl' => true, 'forceSessionId' => true, 'htmlEntities' => false, 'norewrite' => true));
    
  
    $scriptUrl = $urlGenerator->generateUrl(
        array('href' => 'modules/flashvideo/lib/flowplayergpl/flowplayer-3.2.6.js'),
        array('forceFullUrl' => true));
    $playerUrl = $urlGenerator->generateUrl(
        array('href' => 'modules/flashvideo/lib/flowplayergpl/flowplayer-3.2.7.swf'),
        array('forceFullUrl' => true));
    $audioUrl = $urlGenerator->generateUrl(
        array('href' => 'local/audio/yakety_sax.mp3'),
        array('forceFullUrl' => true));
        
    list ($ret, $path) = $item->fetchPath();
    
    if (!$ret) {
        $src = preg_replace('/^.*\/spanners\//', 'flv:', $path);
    }
    $replacer = sprintf("
<a href=\"%s\"
	style=\"display:block;width:%spx;height:%spx;background-image:url(%s)\"
	id=\"trickplay\">
</a>  
    
  <script src=\"%s\"></script>
  <script language=\"JavaScript\">
  flowplayer(\"trickplay\", \"%s\", {
    'play':{
      'opacity':1.0
    },
    'log':{
      'level': 'info',
      'filter': '*'
    },
    'plugins':{
      'slowmotion':{
        'url':'flowplayer.slowmotion-3.2.1.swf'
      },
      'rtmp':{
        'url':'flowplayer.rtmp-3.2.3.swf',
        'netConnectionUrl':'rtmp://rt0.spannerspotter.com/fastplay'
      },		// add a content plugin to show speed information (this is optional)
      'controls':{
        'time':true,
        'stop':true,
        'fastBackward':false,
        'fastForward':false,
        'slowBackward':false,
        'slowForward':false,
        'url':'flowplayer.controls-3.2.5.swf'
      }
    },
    'clip':{
      'provider':'rtmp',
      'autoPlay':false,
      'loop':true,
      'scaling':'orig',
      onFinish:function(){this.getPlugin(\"play\").css({opacity:0.0});this.seek(0);this.pause()}
    }
  });
  </script>
    ",
    $src,
    $width,
    $height,
    $thumbUrl,
    $scriptUrl,
    $playerUrl);
    
    $playerFooter = '
  <script language="JavaScript">
$f().onLoad(function() {
	$("#actions").css("opacity", 1);
    $("#actions button").removeAttr("disabled");
});

$f().onUnload(function() {
	$("#actions").css("opacity", 0.5);
    $("#actions button").attr("disabled", true);
});


var actions = {
	backward: function(speed) {
		$f().resume();
		$f().getPlugin(\'slowmotion\').backward(speed, 30);
	},
	forward: function(speed) {
		$f().resume();
		$f().getPlugin(\'slowmotion\').forward(speed, 30);
	},
	normal: function() {
		$f().resume();
		$f().getPlugin(\'slowmotion\').normal();
	},
	pause: function() {
		$f().toggle();
	},
  step: function(step) {
    $f().seek($f().getTime()+step);
  },
  reset: function() {
    $f().stop();
		$f().play();
  }
}
</script>';


  $clampedWidth = $width < 960 ? 960 : $width;
  $playerFooter .= sprintf('
<table style="width: %spx; border-width: 0px; border-spacing: 0px;"><tr><td style="width:%spx; vertical-align: middle;">
<div id="actions" style="text-align:center;opacity:0.5;">',
    $clampedWidth, $clampedWidth-120);
  $buttons = '';
  /* $buttons .= '<button type="button" class="custom low small" disabled onClick="actions.step(-1)">-1s</button>'; */
  $buttons .= '<button type="button" class="custom low small" style="font-size:10px;" disabled onClick="actions.reset()">Reset</button>';
  /* $buttons .= ' Playback speed: '; */
  foreach (array(100, 50, 25) as $speed) {
    $buttons .= sprintf('<button type="button" class="custom low small" style="font-size:10px;" disabled onClick="actions.backward(%s)">-%s%%</button>',
      $speed/25.0, $speed);
  }
  $buttons .= '<button type="button" class="custom low small" style="font-size:10px;" disabled onClick="actions.pause()">Pause</button>';
  foreach (array(2, 4, 6, 8, 10, 25, 50, 75, 100, 150, 200, 400) as $speed) {
    $buttons .= sprintf('<button type="button" class="custom low small" style="font-size:10px;" disabled onClick="actions.forward(%s)">%s%%</button>',
      $speed/25.0, $speed);
  }
  /* $buttons .= '<button type="button" class="custom low small" disabled onClick="actions.step(3)">+1s</button>'; */
  $buttons .= '</div>';
  $playerFooter .= $buttons;
  
  $playerFooter .= '</td><td style="width:120px;text-align:center; vertical-align: middle;">'.sprintf('
  <div id="audio" style="display:block;width:120px;height:20px; vertical-align: middle;"
	href="%s"></div>High-speed audio supplement
<script>
// install flowplayer into container
$f("audio", "%s", {

	// fullscreen button not needed here
	plugins: {
		controls: {
			fullscreen: false,
			height: 20,
			autoHide: false,
      time: false,
      scrubber: false
		}
	},

	clip: {
		autoPlay: false,

		// optional: when playback starts close the first audio playback
		onBeforeBegin: function() {
			$f("player").close();
		}
	}

});
</script>',
    $audioUrl,
    $playerUrl);
  $playerFooter .= '</td></tr></table>';
  $playerFooter .= '
<br><strong>This is an experimental service.</strong>  Known issues are:
<ul><li>Bandwidth requirements increases with playback speed, and can reach 5Mbps above 100%.
<li>This service can only support a limited number of simultaneous users; typically 10.
<li>The player may fail to initialise with <strong>Error #1069</strong>.  This is usually resolved by reloading the page a few times.
</ul><br>';
  } elseif ($player == "flvplayer") {
    /*
     * ***** FLVPLAYER
     */    
    $playerUrl = $urlGenerator->generateUrl(
      array('href' => 'modules/flashvideo/lib/flvplayer/FlvPlayer.swf'),
      array('forceFullUrl' => true));
    $flashVars = sprintf('flvpVideoSource=%s&autoPlay=true&autoRewind=false',
             urlencode($src));
    $flashVars .= '&flvpFolderLocation:/modules/flashvideo/lib/flvplayer/'; 
    $flashVars .= '&flvpWidth='.$width.'&flvpHeight='.$height;
    $flashVars .= '&flvpInitVolume:100&flvpTurnOnCorners:true';
  } elseif ($player == "jwplayer") {
    /*
     * ***** JWPLAYER
     */    
    $playerUrl = $urlGenerator->generateUrl(
      array('href' => 'modules/flashvideo/lib/jwplayer/player.swf'),
      array('forceFullUrl' => true));
    $flashVars = sprintf('file=%s&image=%s',
             urlencode($src), urlencode($thumbUrl));
    $flashVars .= '&width='.$width.'&height='.$height;
    $flashVars .= '&stretching=none';
    /* $flashVars .= sprintf('&plugins=fbit-1&fbit.link=%s', urlencode($shareUrl)); */
  } else {
    /*
     * ***** MOYEA PLAYER
     */    
    $playerUrl = $urlGenerator->generateUrl(
    array('href' => 'modules/flashvideo/moyea/mwplayer.swf'),
    array('forceFullUrl' => true));
    $flashVars = sprintf('playerOpts=playListPath*^^%s^%s*s',
    urlencode($src), urlencode($thumbUrl));
    $flashVars .= '||autoLoad*false*b'; 
    $flashVars .= '||pauseAtFirstFrame*true*b'; 
    $flashVars .= '||autoRewind*false*b'; 
    $flashVars .= '||pauseAtLastFrame*false*b'; 
    $flashVars .= '||showReplay*true*b'; 
    $flashVars .= '||minWidth*'.$width.'*i'; 
    $flashVars .= '||minHeight*'.$height.'*i'; 
  }
  $jsWarning = $module->translate('A Flash player and JavaScript are required to view this content.');
  $objWidth = $width;
  if ($height == 360 || $height == 352)
  {
      $objHeight = $height+33;
  }
  else
  {
      $objHeight = $height+33;
  }
  
  if ($replacer == '') {
    $replacer = sprintf('<script type="text/javascript" src="%s"></script>
      <script type="text/javascript">
      // <![CDATA[
      function divResize(id, nw, nh) {
        var obj = document.getElementById(id);
        obj.style.width = nw + "px";
        obj.style.height = nh + "px";
      }
      // ]]>
      </script>
      <div id="flashvideo" style="align:left;width:%s;height:%s">
      <div id="flvContent" style="width: 100%%; height: 100%%">%s</div>
      </div>
      <script type="text/javascript">
      // <![CDATA[
      var so = new SWFObject("%s", "%s", "%s", "%s", "9.0.115.0", "ffffff");
      so.addParam("allowScriptAccess","always");
      so.addParam("flashVars","%s");
      so.useExpressInstall("%s");
      so.addParam("wmode","transparent");
      so.addParam("allowFullScreen","true");
      so.write("flvContent");
      // ]]>
      </script>',
      $SWFObjectUrl,
      $objWidth,
      $objHeight,
      $jsWarning,
      $playerUrl,
      !empty($params['id']) ? $params['id'] : 'movie',
      $objWidth,
      $objHeight,
      $flashVars,
      $expressInstallUrl
    );
  }
  $shareFooter = sprintf(
    '<table style="width: %spx; border-width: 0px; border-spacing: 0px; "><tr><td style="width: 225px; height: 35px; padding: 2px 0 0 0; vertical-align: middle; overflow: hidden">
    <script src="http://connect.facebook.net/en_US/all.js#xfbml=1"></script><fb:like href="%s" show_faces="false" width="225" font=""></fb:like>
    </td><td style="text-align: right; vertical-align: middle">
    <!-- AddThis Button BEGIN -->
    <a class="addthis_button" addthis:url="%s" href="http://www.addthis.com/bookmark.php?v=250&amp;pubid=ra-4daa05c11b704dcf"><img src="http://s7.addthis.com/static/btn/sm-share-en.gif" width="83" height="16" alt="Bookmark and Share" style="border:0"/></a>
    <script type="text/javascript">var addthis_config = {"data_track_clickback":true};</script>
    <script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#pubid=ra-4daa05c11b704dcf"></script>
    <!-- AddThis Button END -->
    </td><td style="width: 70px; text-align: right; vertical-align: middle">
    <a href="%s">Download</a>
    </td></tr></table>',
    $objWidth,
    urlencode($shareUrl),
    urlencode($shareUrl),
    $src
  );
  return  $scripts . $playerChooser . $replacer . $playerFooter . $shareFooter;
  }
}
?>
